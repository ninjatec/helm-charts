apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: db-postgres-service
spec:
  selector:
    app: {{ .Release.Name }}-db-postgres
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      nodePort: 30000
      port: 5432
      targetPort: db-socket-port

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-db-pv-claim
  namespace: {{ .Release.Namespace }}
  labels:
    app: support-tools
spec:
  storageClassName:  default-retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-db-postgres-deployment
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ .Release.Name }}-db-postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-db-postgres
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-db-postgres
    spec:
      containers:
        - name: {{ .Release.Name }}-db-postgres
          image: postgres:13.2-alpine
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: RUNDECK_DATABASE_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: RUNDECK_DATABASE_PASSWORD
          ports:
            - name: db-socket-port
              containerPort: 5432
          resources:
            requests:
              cpu: 300m
              memory: 128Mi
            limits:
              cpu: 400m
              memory: 500Mi
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: {{ .Release.Name }}-db-data
      volumes:
        - name: {{ .Release.Name }}-db-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-db-pv-claim
